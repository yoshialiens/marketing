  <div class="span4">
    <%= render 'layouts/navbar' %>
  </div>
  <div class="span8">
  	<h1 id="githubテスト"><a name="githubテスト" href="#githubテスト"></a>Githubテスト</h1><hr class="page"><p>Gitを使いGithub上のリポジトリにpushして確認をしてください。</p><hr class="section"><hr class="underscore"><h3 id="github上に新しいリポジトリ（フォルダを管理する場所）を作成する"><a name="github上に新しいリポジトリ（フォルダを管理する場所）を作成する" href="#github上に新しいリポジトリ（フォルダを管理する場所）を作成する"></a>github上に新しいリポジトリ（フォルダを管理する場所）を作成する</h3><hr class="section"><p>ログインページ右にある「New repository」を押し、必要な情報を入力すると作成されます。</p><p><%= image_tag("1_5_004.png", :alt => "Github登録") %></p><hr class="underscore"><h3 id="gitを使いgithub上のリポジトリにプッシュする"><a name="gitを使いgithub上のリポジトリにプッシュする" href="#gitを使いgithub上のリポジトリにプッシュする"></a>gitを使いgithub上のリポジトリにプッシュする</h3><hr class="section"><p>ここの流れは重要になります！<br>Git（ファイル管理システム）における一連の流れになります。<br>そのため、Githubだけではなく、次に進める「heroku」というサービスや<br>Webサーバー側にRailsプロジェクトをアップする際には必ずこの流れを使います。</p><hr class="section"><h3 id="ドットインストールで作ったrailsアプリのリポジトリへ移動"><a name="ドットインストールで作ったrailsアプリのリポジトリへ移動" href="#ドットインストールで作ったrailsアプリのリポジトリへ移動"></a>ドットインストールで作ったRailsアプリのリポジトリへ移動</h3><p>cdコマンドを使い、Railsプロジェクトのリポジトリまで移動します。</p><hr class="section"><h3 id="railsアプリのリポジトリにgit用のサブディレクトリを作成"><a name="railsアプリのリポジトリにgit用のサブディレクトリを作成" href="#railsアプリのリポジトリにgit用のサブディレクトリを作成"></a>RailsアプリのリポジトリにGit用のサブディレクトリを作成</h3><pre><code class="ruby hljs" data-origin="&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;"><span class="hljs-variable">$ </span>git init
</code></pre><hr class="section"><h3 id="github（git）にプッシュ（データを送信）するファイルを指定する"><a name="github（git）にプッシュ（データを送信）するファイルを指定する" href="#github（git）にプッシュ（データを送信）するファイルを指定する"></a>Github（Git）にプッシュ（データを送信）するファイルを指定する</h3><p>※addの後の「.」は全てのファイルを選択するという意味になります。</p><pre><code class="ruby hljs" data-origin="&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;"><span class="hljs-variable">$ </span>git add .
</code></pre><hr class="section"><h3 id="git-addで指定したファイルをまとめ、名前を付けてコミット（セーブ）する"><a name="git-addで指定したファイルをまとめ、名前を付けてコミット（セーブ）する" href="#git-addで指定したファイルをまとめ、名前を付けてコミット（セーブ）する"></a>git addで指定したファイルをまとめ、名前を付けてコミット（セーブ）する</h3><pre><code class="ruby hljs" data-origin="&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;$ git commit -m &quot;first commit&quot;
&lt;/code&gt;&lt;/pre&gt;"><span class="hljs-variable">$ </span>git commit -m <span class="hljs-string">"first commit"</span>
</code></pre><p>（”first commit”この中は自分が分かりやすいようなタイトルをつけてください）</p><p><%= image_tag("1_5_005.png", :alt => "Github登録") %></p><hr class="section"><h3 id="接続先のリポジトリを指定する"><a name="接続先のリポジトリを指定する" href="#接続先のリポジトリを指定する"></a>接続先のリポジトリを指定する</h3><pre><code class="ruby hljs" data-origin="&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;$ git remote add origin git@github.com:[githubアカウント]/[リポジトリ名].git
&lt;/code&gt;&lt;/pre&gt;"><span class="hljs-variable">$ </span>git remote add origin git<span class="hljs-variable">@github</span>.<span class="hljs-symbol">com:</span>[githubアカウント]/[リポジトリ名].git
</code></pre><p>※章の最初に作成したリポジトリを指定します。<br>※5-3.で設定したパスフレーズを聞かれる場合がありますので、入力してください。</p><hr class="section"><h3 id="githubのリポジトリをプル（受信）する"><a name="githubのリポジトリをプル（受信）する" href="#githubのリポジトリをプル（受信）する"></a>Githubのリポジトリをプル（受信）する</h3><p>この部分は必要な方と必要でない方がいますので、1度コマンドを打ってみてください。</p><pre><code class="ruby hljs" data-origin="&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;$ git pull origin master
&lt;/code&gt;&lt;/pre&gt;"><span class="hljs-variable">$ </span>git pull origin master
</code></pre><hr class="section"><h3 id="githubのリポジトリにコミットした内容をプッシュ（送信）する"><a name="githubのリポジトリにコミットした内容をプッシュ（送信）する" href="#githubのリポジトリにコミットした内容をプッシュ（送信）する"></a>Githubのリポジトリにコミットした内容をプッシュ（送信）する</h3><pre><code class="ruby hljs" data-origin="&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;"><span class="hljs-variable">$ </span>git push -u origin master
</code></pre><p><%= image_tag("1_5_006.png", :alt => "Github登録") %></p><hr class="section"><h3 id="ブラウザでgithubを確認"><a name="ブラウザでgithubを確認" href="#ブラウザでgithubを確認"></a>ブラウザでgithubを確認</h3><p>ローカルのリポジトリ（Railsを進めてきたフォルダ）がそのままgithubで見られるようになっていれば確認完了です。<br>※下記参考サイトのようにファイルが見れるようになっていれば完了です。<br><a href="https://github.com/yoshialiens/project01">https://github.com/yoshialiens/project01</a></p><p>※細かい部分の名称は後に理解できますので、まずはコマンド通り進めてエラーが出ないか確認をお願いいたします。<br>※今後、Railsの学習を進めていく際は、適宜Githubにプッシュしてバックアップを取っていくことをおすすめいたします。</p>
  </div>
